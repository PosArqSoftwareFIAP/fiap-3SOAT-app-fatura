name: Build
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    env:
      MONGO_DB: ${{ secrets.MONGO_DB }}
      MONGO_SENHA: ${{ secrets.MONGO_SENHA }}
      MONGO_USER: ${{ secrets.MONGO_USER }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          
      # - name: Install flask_testing
      #   run: pip install flask_testing
        
      - name: Verify installation of flask_testing
        run: |
          pip show flask_testing
          
      - name: Install tox and any other packages
        run: pip install tox
        


        
      # - name: Run tox
      #   run: tox -e py
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 

      - name: Run coverage
        env:
          MONGO_DB: fiap-food
          MONGO_SENHA: 1X4y906fZUQ7Ad83
          MONGO_USER: doadmin
        run: |
          pip install pytest-cov
          python3 -m coverage run -m unittest discover -s tests
          python3 -m coverage xml -o coverage.xml



      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # with:
        #   args: >
        #     -Dsonar.projectKey=posarqsoftwarefiap
        #     -Dsonar.organization=PosArqSoftwareFIAP
        #     -Dsonar.sources=./entregador
        #     -Dsonar.tests=./tests
# projectBaseDir: ./path/to/your/project  # Opcional: ajuste para o diretório base do seu projeto, se não for o root
# -Dsonar.java.binaries=./build/classes

  createPullRequest:
    needs: sonarcloud
    runs-on: ubuntu-latest
    if: ${{ needs.sonarcloud.result == 'success' }}
    steps:
      - uses: actions/checkout@v2

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "develop"
          destination_branch: "main"
          pr_title: "Merge Develop into Main"
          pr_body: "Automated PR to merge `develop` changes into `main`."
          github_token: ${{ secrets.GITHUB_TOKEN }}